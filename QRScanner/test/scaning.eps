%!PS-Adobe-2.0 EPSF-2.0
%%Title: scaning.eps
%%Creator: gnuplot 4.2 patchlevel 6 
%%CreationDate: Tue May 14 05:54:12 2013
%%DocumentFonts: (atend)
%%BoundingBox: 50 50 2210 1058
%%EndComments
%%BeginProlog
/gnudict 256 dict def
gnudict begin
%
% The following 6 true/false flags may be edited by hand if required
% The unit line width may also be changed
%
/Color true def
/Blacktext false def
/Solid false def
/Dashlength 1 def
/Landscape false def
/Level1 false def
/Rounded false def
/TransparentPatterns false def
/gnulinewidth 5.000 def
/userlinewidth gnulinewidth def
%
/vshift -266 def
/dl1 {
  10.0 Dashlength mul mul
  Rounded { currentlinewidth 0.75 mul sub dup 0 le { pop 0.01 } if } if
} def
/dl2 {
  10.0 Dashlength mul mul
  Rounded { currentlinewidth 0.75 mul add } if
} def
/hpt_ 31.5 def
/vpt_ 31.5 def
/hpt hpt_ def
/vpt vpt_ def
Level1 {} {
/SDict 10 dict def
systemdict /pdfmark known not {
  userdict /pdfmark systemdict /cleartomark get put
} if
SDict begin [
  /Title (scaning.eps)
  /Subject (gnuplot plot)
  /Creator (gnuplot 4.2 patchlevel 6 )
  /Author (Max,,,,)
%  /Producer (gnuplot)
%  /Keywords ()
  /CreationDate (Tue May 14 05:54:12 2013)
  /DOCINFO pdfmark
end
} ifelse
%
% Gnuplot Prolog Version 4.2 (August 2006)
%
/M {moveto} bind def
/L {lineto} bind def
/R {rmoveto} bind def
/V {rlineto} bind def
/N {newpath moveto} bind def
/Z {closepath} bind def
/C {setrgbcolor} bind def
/f {rlineto fill} bind def
/vpt2 vpt 2 mul def
/hpt2 hpt 2 mul def
/Lshow {currentpoint stroke M 0 vshift R 
	Blacktext {gsave 0 setgray show grestore} {show} ifelse} def
/Rshow {currentpoint stroke M dup stringwidth pop neg vshift R
	Blacktext {gsave 0 setgray show grestore} {show} ifelse} def
/Cshow {currentpoint stroke M dup stringwidth pop -2 div vshift R 
	Blacktext {gsave 0 setgray show grestore} {show} ifelse} def
/UP {dup vpt_ mul /vpt exch def hpt_ mul /hpt exch def
  /hpt2 hpt 2 mul def /vpt2 vpt 2 mul def} def
/DL {Color {setrgbcolor Solid {pop []} if 0 setdash}
 {pop pop pop 0 setgray Solid {pop []} if 0 setdash} ifelse} def
/BL {stroke userlinewidth 2 mul setlinewidth
	Rounded {1 setlinejoin 1 setlinecap} if} def
/AL {stroke userlinewidth 2 div setlinewidth
	Rounded {1 setlinejoin 1 setlinecap} if} def
/UL {dup gnulinewidth mul /userlinewidth exch def
	dup 1 lt {pop 1} if 10 mul /udl exch def} def
/PL {stroke userlinewidth setlinewidth
	Rounded {1 setlinejoin 1 setlinecap} if} def
% Default Line colors
/LCw {1 1 1} def
/LCb {0 0 0} def
/LCa {0 0 0} def
/LC0 {1 0 0} def
/LC1 {0 1 0} def
/LC2 {0 0 1} def
/LC3 {1 0 1} def
/LC4 {0 1 1} def
/LC5 {1 1 0} def
/LC6 {0 0 0} def
/LC7 {1 0.3 0} def
/LC8 {0.5 0.5 0.5} def
% Default Line Types
/LTw {PL [] 1 setgray} def
/LTb {BL [] LCb DL} def
/LTa {AL [1 udl mul 2 udl mul] 0 setdash LCa setrgbcolor} def
/LT0 {PL [] LC0 DL} def
/LT1 {PL [4 dl1 2 dl2] LC1 DL} def
/LT2 {PL [2 dl1 3 dl2] LC2 DL} def
/LT3 {PL [1 dl1 1.5 dl2] LC3 DL} def
/LT4 {PL [6 dl1 2 dl2 1 dl1 2 dl2] LC4 DL} def
/LT5 {PL [3 dl1 3 dl2 1 dl1 3 dl2] LC5 DL} def
/LT6 {PL [2 dl1 2 dl2 2 dl1 6 dl2] LC6 DL} def
/LT7 {PL [1 dl1 2 dl2 6 dl1 2 dl2 1 dl1 2 dl2] LC7 DL} def
/LT8 {PL [2 dl1 2 dl2 2 dl1 2 dl2 2 dl1 2 dl2 2 dl1 4 dl2] LC8 DL} def
/Pnt {stroke [] 0 setdash gsave 1 setlinecap M 0 0 V stroke grestore} def
/Dia {stroke [] 0 setdash 2 copy vpt add M
  hpt neg vpt neg V hpt vpt neg V
  hpt vpt V hpt neg vpt V closepath stroke
  Pnt} def
/Pls {stroke [] 0 setdash vpt sub M 0 vpt2 V
  currentpoint stroke M
  hpt neg vpt neg R hpt2 0 V stroke
 } def
/Box {stroke [] 0 setdash 2 copy exch hpt sub exch vpt add M
  0 vpt2 neg V hpt2 0 V 0 vpt2 V
  hpt2 neg 0 V closepath stroke
  Pnt} def
/Crs {stroke [] 0 setdash exch hpt sub exch vpt add M
  hpt2 vpt2 neg V currentpoint stroke M
  hpt2 neg 0 R hpt2 vpt2 V stroke} def
/TriU {stroke [] 0 setdash 2 copy vpt 1.12 mul add M
  hpt neg vpt -1.62 mul V
  hpt 2 mul 0 V
  hpt neg vpt 1.62 mul V closepath stroke
  Pnt} def
/Star {2 copy Pls Crs} def
/BoxF {stroke [] 0 setdash exch hpt sub exch vpt add M
  0 vpt2 neg V hpt2 0 V 0 vpt2 V
  hpt2 neg 0 V closepath fill} def
/TriUF {stroke [] 0 setdash vpt 1.12 mul add M
  hpt neg vpt -1.62 mul V
  hpt 2 mul 0 V
  hpt neg vpt 1.62 mul V closepath fill} def
/TriD {stroke [] 0 setdash 2 copy vpt 1.12 mul sub M
  hpt neg vpt 1.62 mul V
  hpt 2 mul 0 V
  hpt neg vpt -1.62 mul V closepath stroke
  Pnt} def
/TriDF {stroke [] 0 setdash vpt 1.12 mul sub M
  hpt neg vpt 1.62 mul V
  hpt 2 mul 0 V
  hpt neg vpt -1.62 mul V closepath fill} def
/DiaF {stroke [] 0 setdash vpt add M
  hpt neg vpt neg V hpt vpt neg V
  hpt vpt V hpt neg vpt V closepath fill} def
/Pent {stroke [] 0 setdash 2 copy gsave
  translate 0 hpt M 4 {72 rotate 0 hpt L} repeat
  closepath stroke grestore Pnt} def
/PentF {stroke [] 0 setdash gsave
  translate 0 hpt M 4 {72 rotate 0 hpt L} repeat
  closepath fill grestore} def
/Circle {stroke [] 0 setdash 2 copy
  hpt 0 360 arc stroke Pnt} def
/CircleF {stroke [] 0 setdash hpt 0 360 arc fill} def
/C0 {BL [] 0 setdash 2 copy moveto vpt 90 450 arc} bind def
/C1 {BL [] 0 setdash 2 copy moveto
	2 copy vpt 0 90 arc closepath fill
	vpt 0 360 arc closepath} bind def
/C2 {BL [] 0 setdash 2 copy moveto
	2 copy vpt 90 180 arc closepath fill
	vpt 0 360 arc closepath} bind def
/C3 {BL [] 0 setdash 2 copy moveto
	2 copy vpt 0 180 arc closepath fill
	vpt 0 360 arc closepath} bind def
/C4 {BL [] 0 setdash 2 copy moveto
	2 copy vpt 180 270 arc closepath fill
	vpt 0 360 arc closepath} bind def
/C5 {BL [] 0 setdash 2 copy moveto
	2 copy vpt 0 90 arc
	2 copy moveto
	2 copy vpt 180 270 arc closepath fill
	vpt 0 360 arc} bind def
/C6 {BL [] 0 setdash 2 copy moveto
	2 copy vpt 90 270 arc closepath fill
	vpt 0 360 arc closepath} bind def
/C7 {BL [] 0 setdash 2 copy moveto
	2 copy vpt 0 270 arc closepath fill
	vpt 0 360 arc closepath} bind def
/C8 {BL [] 0 setdash 2 copy moveto
	2 copy vpt 270 360 arc closepath fill
	vpt 0 360 arc closepath} bind def
/C9 {BL [] 0 setdash 2 copy moveto
	2 copy vpt 270 450 arc closepath fill
	vpt 0 360 arc closepath} bind def
/C10 {BL [] 0 setdash 2 copy 2 copy moveto vpt 270 360 arc closepath fill
	2 copy moveto
	2 copy vpt 90 180 arc closepath fill
	vpt 0 360 arc closepath} bind def
/C11 {BL [] 0 setdash 2 copy moveto
	2 copy vpt 0 180 arc closepath fill
	2 copy moveto
	2 copy vpt 270 360 arc closepath fill
	vpt 0 360 arc closepath} bind def
/C12 {BL [] 0 setdash 2 copy moveto
	2 copy vpt 180 360 arc closepath fill
	vpt 0 360 arc closepath} bind def
/C13 {BL [] 0 setdash 2 copy moveto
	2 copy vpt 0 90 arc closepath fill
	2 copy moveto
	2 copy vpt 180 360 arc closepath fill
	vpt 0 360 arc closepath} bind def
/C14 {BL [] 0 setdash 2 copy moveto
	2 copy vpt 90 360 arc closepath fill
	vpt 0 360 arc} bind def
/C15 {BL [] 0 setdash 2 copy vpt 0 360 arc closepath fill
	vpt 0 360 arc closepath} bind def
/Rec {newpath 4 2 roll moveto 1 index 0 rlineto 0 exch rlineto
	neg 0 rlineto closepath} bind def
/Square {dup Rec} bind def
/Bsquare {vpt sub exch vpt sub exch vpt2 Square} bind def
/S0 {BL [] 0 setdash 2 copy moveto 0 vpt rlineto BL Bsquare} bind def
/S1 {BL [] 0 setdash 2 copy vpt Square fill Bsquare} bind def
/S2 {BL [] 0 setdash 2 copy exch vpt sub exch vpt Square fill Bsquare} bind def
/S3 {BL [] 0 setdash 2 copy exch vpt sub exch vpt2 vpt Rec fill Bsquare} bind def
/S4 {BL [] 0 setdash 2 copy exch vpt sub exch vpt sub vpt Square fill Bsquare} bind def
/S5 {BL [] 0 setdash 2 copy 2 copy vpt Square fill
	exch vpt sub exch vpt sub vpt Square fill Bsquare} bind def
/S6 {BL [] 0 setdash 2 copy exch vpt sub exch vpt sub vpt vpt2 Rec fill Bsquare} bind def
/S7 {BL [] 0 setdash 2 copy exch vpt sub exch vpt sub vpt vpt2 Rec fill
	2 copy vpt Square fill Bsquare} bind def
/S8 {BL [] 0 setdash 2 copy vpt sub vpt Square fill Bsquare} bind def
/S9 {BL [] 0 setdash 2 copy vpt sub vpt vpt2 Rec fill Bsquare} bind def
/S10 {BL [] 0 setdash 2 copy vpt sub vpt Square fill 2 copy exch vpt sub exch vpt Square fill
	Bsquare} bind def
/S11 {BL [] 0 setdash 2 copy vpt sub vpt Square fill 2 copy exch vpt sub exch vpt2 vpt Rec fill
	Bsquare} bind def
/S12 {BL [] 0 setdash 2 copy exch vpt sub exch vpt sub vpt2 vpt Rec fill Bsquare} bind def
/S13 {BL [] 0 setdash 2 copy exch vpt sub exch vpt sub vpt2 vpt Rec fill
	2 copy vpt Square fill Bsquare} bind def
/S14 {BL [] 0 setdash 2 copy exch vpt sub exch vpt sub vpt2 vpt Rec fill
	2 copy exch vpt sub exch vpt Square fill Bsquare} bind def
/S15 {BL [] 0 setdash 2 copy Bsquare fill Bsquare} bind def
/D0 {gsave translate 45 rotate 0 0 S0 stroke grestore} bind def
/D1 {gsave translate 45 rotate 0 0 S1 stroke grestore} bind def
/D2 {gsave translate 45 rotate 0 0 S2 stroke grestore} bind def
/D3 {gsave translate 45 rotate 0 0 S3 stroke grestore} bind def
/D4 {gsave translate 45 rotate 0 0 S4 stroke grestore} bind def
/D5 {gsave translate 45 rotate 0 0 S5 stroke grestore} bind def
/D6 {gsave translate 45 rotate 0 0 S6 stroke grestore} bind def
/D7 {gsave translate 45 rotate 0 0 S7 stroke grestore} bind def
/D8 {gsave translate 45 rotate 0 0 S8 stroke grestore} bind def
/D9 {gsave translate 45 rotate 0 0 S9 stroke grestore} bind def
/D10 {gsave translate 45 rotate 0 0 S10 stroke grestore} bind def
/D11 {gsave translate 45 rotate 0 0 S11 stroke grestore} bind def
/D12 {gsave translate 45 rotate 0 0 S12 stroke grestore} bind def
/D13 {gsave translate 45 rotate 0 0 S13 stroke grestore} bind def
/D14 {gsave translate 45 rotate 0 0 S14 stroke grestore} bind def
/D15 {gsave translate 45 rotate 0 0 S15 stroke grestore} bind def
/DiaE {stroke [] 0 setdash vpt add M
  hpt neg vpt neg V hpt vpt neg V
  hpt vpt V hpt neg vpt V closepath stroke} def
/BoxE {stroke [] 0 setdash exch hpt sub exch vpt add M
  0 vpt2 neg V hpt2 0 V 0 vpt2 V
  hpt2 neg 0 V closepath stroke} def
/TriUE {stroke [] 0 setdash vpt 1.12 mul add M
  hpt neg vpt -1.62 mul V
  hpt 2 mul 0 V
  hpt neg vpt 1.62 mul V closepath stroke} def
/TriDE {stroke [] 0 setdash vpt 1.12 mul sub M
  hpt neg vpt 1.62 mul V
  hpt 2 mul 0 V
  hpt neg vpt -1.62 mul V closepath stroke} def
/PentE {stroke [] 0 setdash gsave
  translate 0 hpt M 4 {72 rotate 0 hpt L} repeat
  closepath stroke grestore} def
/CircE {stroke [] 0 setdash 
  hpt 0 360 arc stroke} def
/Opaque {gsave closepath 1 setgray fill grestore 0 setgray closepath} def
/DiaW {stroke [] 0 setdash vpt add M
  hpt neg vpt neg V hpt vpt neg V
  hpt vpt V hpt neg vpt V Opaque stroke} def
/BoxW {stroke [] 0 setdash exch hpt sub exch vpt add M
  0 vpt2 neg V hpt2 0 V 0 vpt2 V
  hpt2 neg 0 V Opaque stroke} def
/TriUW {stroke [] 0 setdash vpt 1.12 mul add M
  hpt neg vpt -1.62 mul V
  hpt 2 mul 0 V
  hpt neg vpt 1.62 mul V Opaque stroke} def
/TriDW {stroke [] 0 setdash vpt 1.12 mul sub M
  hpt neg vpt 1.62 mul V
  hpt 2 mul 0 V
  hpt neg vpt -1.62 mul V Opaque stroke} def
/PentW {stroke [] 0 setdash gsave
  translate 0 hpt M 4 {72 rotate 0 hpt L} repeat
  Opaque stroke grestore} def
/CircW {stroke [] 0 setdash 
  hpt 0 360 arc Opaque stroke} def
/BoxFill {gsave Rec 1 setgray fill grestore} def
/Density {
  /Fillden exch def
  currentrgbcolor
  /ColB exch def /ColG exch def /ColR exch def
  /ColR ColR Fillden mul Fillden sub 1 add def
  /ColG ColG Fillden mul Fillden sub 1 add def
  /ColB ColB Fillden mul Fillden sub 1 add def
  ColR ColG ColB setrgbcolor} def
/BoxColFill {gsave Rec PolyFill} def
/PolyFill {gsave Density fill grestore grestore} def
/h {rlineto rlineto rlineto gsave closepath fill grestore} bind def
%
% PostScript Level 1 Pattern Fill routine for rectangles
% Usage: x y w h s a XX PatternFill
%	x,y = lower left corner of box to be filled
%	w,h = width and height of box
%	  a = angle in degrees between lines and x-axis
%	 XX = 0/1 for no/yes cross-hatch
%
/PatternFill {gsave /PFa [ 9 2 roll ] def
  PFa 0 get PFa 2 get 2 div add PFa 1 get PFa 3 get 2 div add translate
  PFa 2 get -2 div PFa 3 get -2 div PFa 2 get PFa 3 get Rec
  gsave 1 setgray fill grestore clip
  currentlinewidth 0.5 mul setlinewidth
  /PFs PFa 2 get dup mul PFa 3 get dup mul add sqrt def
  0 0 M PFa 5 get rotate PFs -2 div dup translate
  0 1 PFs PFa 4 get div 1 add floor cvi
	{PFa 4 get mul 0 M 0 PFs V} for
  0 PFa 6 get ne {
	0 1 PFs PFa 4 get div 1 add floor cvi
	{PFa 4 get mul 0 2 1 roll M PFs 0 V} for
 } if
  stroke grestore} def
%
/languagelevel where
 {pop languagelevel} {1} ifelse
 2 lt
	{/InterpretLevel1 true def}
	{/InterpretLevel1 Level1 def}
 ifelse
%
% PostScript level 2 pattern fill definitions
%
/Level2PatternFill {
/Tile8x8 {/PaintType 2 /PatternType 1 /TilingType 1 /BBox [0 0 8 8] /XStep 8 /YStep 8}
	bind def
/KeepColor {currentrgbcolor [/Pattern /DeviceRGB] setcolorspace} bind def
<< Tile8x8
 /PaintProc {0.5 setlinewidth pop 0 0 M 8 8 L 0 8 M 8 0 L stroke} 
>> matrix makepattern
/Pat1 exch def
<< Tile8x8
 /PaintProc {0.5 setlinewidth pop 0 0 M 8 8 L 0 8 M 8 0 L stroke
	0 4 M 4 8 L 8 4 L 4 0 L 0 4 L stroke}
>> matrix makepattern
/Pat2 exch def
<< Tile8x8
 /PaintProc {0.5 setlinewidth pop 0 0 M 0 8 L
	8 8 L 8 0 L 0 0 L fill}
>> matrix makepattern
/Pat3 exch def
<< Tile8x8
 /PaintProc {0.5 setlinewidth pop -4 8 M 8 -4 L
	0 12 M 12 0 L stroke}
>> matrix makepattern
/Pat4 exch def
<< Tile8x8
 /PaintProc {0.5 setlinewidth pop -4 0 M 8 12 L
	0 -4 M 12 8 L stroke}
>> matrix makepattern
/Pat5 exch def
<< Tile8x8
 /PaintProc {0.5 setlinewidth pop -2 8 M 4 -4 L
	0 12 M 8 -4 L 4 12 M 10 0 L stroke}
>> matrix makepattern
/Pat6 exch def
<< Tile8x8
 /PaintProc {0.5 setlinewidth pop -2 0 M 4 12 L
	0 -4 M 8 12 L 4 -4 M 10 8 L stroke}
>> matrix makepattern
/Pat7 exch def
<< Tile8x8
 /PaintProc {0.5 setlinewidth pop 8 -2 M -4 4 L
	12 0 M -4 8 L 12 4 M 0 10 L stroke}
>> matrix makepattern
/Pat8 exch def
<< Tile8x8
 /PaintProc {0.5 setlinewidth pop 0 -2 M 12 4 L
	-4 0 M 12 8 L -4 4 M 8 10 L stroke}
>> matrix makepattern
/Pat9 exch def
/Pattern1 {PatternBgnd KeepColor Pat1 setpattern} bind def
/Pattern2 {PatternBgnd KeepColor Pat2 setpattern} bind def
/Pattern3 {PatternBgnd KeepColor Pat3 setpattern} bind def
/Pattern4 {PatternBgnd KeepColor Landscape {Pat5} {Pat4} ifelse setpattern} bind def
/Pattern5 {PatternBgnd KeepColor Landscape {Pat4} {Pat5} ifelse setpattern} bind def
/Pattern6 {PatternBgnd KeepColor Landscape {Pat9} {Pat6} ifelse setpattern} bind def
/Pattern7 {PatternBgnd KeepColor Landscape {Pat8} {Pat7} ifelse setpattern} bind def
} def
%
%
%End of PostScript Level 2 code
%
/PatternBgnd {
  TransparentPatterns {} {gsave 1 setgray fill grestore} ifelse
} def
%
% Substitute for Level 2 pattern fill codes with
% grayscale if Level 2 support is not selected.
%
/Level1PatternFill {
/Pattern1 {0.250 Density} bind def
/Pattern2 {0.500 Density} bind def
/Pattern3 {0.750 Density} bind def
/Pattern4 {0.125 Density} bind def
/Pattern5 {0.375 Density} bind def
/Pattern6 {0.625 Density} bind def
/Pattern7 {0.875 Density} bind def
} def
%
% Now test for support of Level 2 code
%
Level1 {Level1PatternFill} {Level2PatternFill} ifelse
%
/Symbol-Oblique /Symbol findfont [1 0 .167 1 0 0] makefont
dup length dict begin {1 index /FID eq {pop pop} {def} ifelse} forall
currentdict end definefont pop
/MFshow {
   { dup 5 get 3 ge
     { 5 get 3 eq {gsave} {grestore} ifelse }
     {dup dup 0 get findfont exch 1 get scalefont setfont
     [ currentpoint ] exch dup 2 get 0 exch R dup 5 get 2 ne {dup dup 6
     get exch 4 get {show} {stringwidth pop 0 R} ifelse }if dup 5 get 0 eq
     {dup 3 get {2 get neg 0 exch R pop} {pop aload pop M} ifelse} {dup 5
     get 1 eq {dup 2 get exch dup 3 get exch 6 get stringwidth pop -2 div
     dup 0 R} {dup 6 get stringwidth pop -2 div 0 R 6 get
     show 2 index {aload pop M neg 3 -1 roll neg R pop pop} {pop pop pop
     pop aload pop M} ifelse }ifelse }ifelse }
     ifelse }
   forall} bind def
/MFwidth {0 exch { dup 5 get 3 ge { 5 get 3 eq { 0 } { pop } ifelse }
 {dup 3 get{dup dup 0 get findfont exch 1 get scalefont setfont
     6 get stringwidth pop add} {pop} ifelse} ifelse} forall} bind def
/MLshow { currentpoint stroke M
  0 exch R
  Blacktext {gsave 0 setgray MFshow grestore} {MFshow} ifelse } bind def
/MRshow { currentpoint stroke M
  exch dup MFwidth neg 3 -1 roll R
  Blacktext {gsave 0 setgray MFshow grestore} {MFshow} ifelse } bind def
/MCshow { currentpoint stroke M
  exch dup MFwidth -2 div 3 -1 roll R
  Blacktext {gsave 0 setgray MFshow grestore} {MFshow} ifelse } bind def
/XYsave    { [( ) 1 2 true false 3 ()] } bind def
/XYrestore { [( ) 1 2 true false 4 ()] } bind def
end
%%EndProlog
gnudict begin
gsave
50 50 translate
0.050 0.050 scale
0 setgray
newpath
(Helvetica) findfont 800 scalefont setfont
1.000 UL
LTb
1.000 UL
LTa
0.73 0.73 0.73 C 4400 2560 M
37600 0 V
stroke
LTb
4400 2560 M
63 0 V
37537 0 R
-63 0 V
stroke
3920 2560 M
[ [(Helvetica) 800.0 0.0 true true 0 ( 6)]
] -266.7 MRshow
1.000 UL
LTb
1.000 UL
LTa
0.73 0.73 0.73 C 4400 4640 M
37600 0 V
stroke
LTb
4400 4640 M
63 0 V
37537 0 R
-63 0 V
stroke
3920 4640 M
[ [(Helvetica) 800.0 0.0 true true 0 ( 8)]
] -266.7 MRshow
1.000 UL
LTb
1.000 UL
LTa
0.73 0.73 0.73 C 4400 6720 M
37600 0 V
stroke
LTb
4400 6720 M
63 0 V
37537 0 R
-63 0 V
stroke
3920 6720 M
[ [(Helvetica) 800.0 0.0 true true 0 ( 10)]
] -266.7 MRshow
1.000 UL
LTb
1.000 UL
LTa
0.73 0.73 0.73 C 4400 8800 M
37600 0 V
stroke
LTb
4400 8800 M
63 0 V
37537 0 R
-63 0 V
stroke
3920 8800 M
[ [(Helvetica) 800.0 0.0 true true 0 ( 12)]
] -266.7 MRshow
1.000 UL
LTb
1.000 UL
LTa
0.73 0.73 0.73 C 4400 10880 M
37600 0 V
stroke
LTb
4400 10880 M
63 0 V
37537 0 R
-63 0 V
stroke
3920 10880 M
[ [(Helvetica) 800.0 0.0 true true 0 ( 14)]
] -266.7 MRshow
1.000 UL
LTb
1.000 UL
LTa
0.73 0.73 0.73 C 4400 12960 M
37600 0 V
stroke
LTb
4400 12960 M
63 0 V
37537 0 R
-63 0 V
stroke
3920 12960 M
[ [(Helvetica) 800.0 0.0 true true 0 ( 16)]
] -266.7 MRshow
1.000 UL
LTb
1.000 UL
LTa
0.73 0.73 0.73 C 4400 15040 M
37600 0 V
stroke
LTb
4400 15040 M
63 0 V
37537 0 R
-63 0 V
stroke
3920 15040 M
[ [(Helvetica) 800.0 0.0 true true 0 ( 18)]
] -266.7 MRshow
1.000 UL
LTb
1.000 UL
LTa
0.73 0.73 0.73 C 4400 17120 M
37600 0 V
stroke
LTb
4400 17120 M
63 0 V
37537 0 R
-63 0 V
stroke
3920 17120 M
[ [(Helvetica) 800.0 0.0 true true 0 ( 20)]
] -266.7 MRshow
1.000 UL
LTb
1.000 UL
LTa
0.73 0.73 0.73 C 4400 19200 M
37600 0 V
stroke
LTb
4400 19200 M
63 0 V
37537 0 R
-63 0 V
stroke
3920 19200 M
[ [(Helvetica) 800.0 0.0 true true 0 ( 22)]
] -266.7 MRshow
1.000 UL
LTb
1.000 UL
LTa
0.73 0.73 0.73 C 4400 2560 M
0 16640 V
stroke
LTb
4400 2560 M
0 63 V
0 16577 R
0 -63 V
stroke
4400 1760 M
[ [(Helvetica) 800.0 0.0 true true 0 ( 0)]
] -266.7 MCshow
1.000 UL
LTb
1.000 UL
LTa
0.73 0.73 0.73 C 11920 2560 M
0 16640 V
stroke
LTb
11920 2560 M
0 63 V
0 16577 R
0 -63 V
stroke
11920 1760 M
[ [(Helvetica) 800.0 0.0 true true 0 ( 50)]
] -266.7 MCshow
1.000 UL
LTb
1.000 UL
LTa
0.73 0.73 0.73 C 19440 2560 M
0 16640 V
stroke
LTb
19440 2560 M
0 63 V
0 16577 R
0 -63 V
stroke
19440 1760 M
[ [(Helvetica) 800.0 0.0 true true 0 ( 100)]
] -266.7 MCshow
1.000 UL
LTb
1.000 UL
LTa
0.73 0.73 0.73 C 26960 2560 M
0 16640 V
stroke
LTb
26960 2560 M
0 63 V
0 16577 R
0 -63 V
stroke
26960 1760 M
[ [(Helvetica) 800.0 0.0 true true 0 ( 150)]
] -266.7 MCshow
1.000 UL
LTb
1.000 UL
LTa
0.73 0.73 0.73 C 34480 2560 M
0 15777 V
0 800 R
0 63 V
stroke
LTb
34480 2560 M
0 63 V
0 16577 R
0 -63 V
stroke
34480 1760 M
[ [(Helvetica) 800.0 0.0 true true 0 ( 200)]
] -266.7 MCshow
1.000 UL
LTb
1.000 UL
LTa
0.73 0.73 0.73 C 42000 2560 M
0 16640 V
stroke
LTb
42000 2560 M
0 63 V
0 16577 R
0 -63 V
stroke
42000 1760 M
[ [(Helvetica) 800.0 0.0 true true 0 ( 250)]
] -266.7 MCshow
1.000 UL
LTb
1.000 UL
LTb
4400 19200 N
0 -16640 V
37600 0 V
0 16640 V
-37600 0 V
Z stroke
LCb setrgbcolor
1600 10880 M
currentpoint gsave translate 90 rotate 0 0 moveto
[ [(Helvetica) 800.0 0.0 true true 0 (Frames por segundo)]
] -266.7 MCshow
grestore
LTb
LCb setrgbcolor
23200 560 M
[ [(Helvetica) 800.0 0.0 true true 0 (Tiempo)]
] -266.7 MCshow
LTb
1.000 UP
1.000 UL
LTb
20.000 UL
LT0
0.63 0.63 0.63 C LTb
38577 18737 M
[ [(Helvetica) 800.0 0.0 true true 0 (Escaneando QR code)]
] -266.7 MRshow
LT0
0.63 0.63 0.63 C 39057 18737 M
1983 0 V
4400 16544 M
4550 6871 L
151 10957 V
150 1077 V
151 -777 V
150 -1848 V
150 8 V
151 2107 V
150 -2385 V
5754 7231 L
150 8925 V
6054 8116 L
6205 5152 L
150 2550 V
151 662 V
150 -203 V
150 -525 V
6957 6267 L
150 423 V
151 731 V
150 332 V
150 589 V
151 1810 V
7859 4369 L
151 3968 V
8160 7130 L
150 114 V
8461 4944 L
8611 2835 L
151 5018 V
150 6561 V
9062 8101 L
151 11005 V
150 -2052 V
151 1070 V
9664 6440 L
150 2035 V
151 9422 V
150 -1528 V
151 1885 V
150 -6766 V
150 -5219 V
151 1042 V
150 2302 V
151 -3935 V
150 2894 V
150 703 V
151 -303 V
150 -1216 V
151 299 V
150 1611 V
150 -1219 V
151 1620 V
150 8910 V
151 -385 V
150 -2622 V
150 1526 V
151 919 V
13123 8242 L
151 586 V
150 8544 V
13574 7219 L
151 11152 V
13875 7399 L
151 -548 V
150 1924 V
150 -323 V
151 247 V
150 -104 V
151 407 V
150 -3254 V
150 2651 V
151 -1063 V
150 483 V
151 10884 V
150 425 V
150 -6339 V
151 -2178 V
150 -4577 V
151 5323 V
150 -5929 V
150 448 V
151 754 V
150 -166 V
151 1056 V
150 -208 V
150 -997 V
151 1153 V
150 9302 V
151 -4108 V
150 -1597 V
150 -5031 V
151 2066 V
150 314 V
151 3698 V
150 893 V
150 -8146 V
151 1086 V
150 2839 V
151 -1320 V
150 -545 V
150 379 V
151 2312 V
150 -301 V
151 135 V
150 274 V
150 2481 V
151 -507 V
150 796 V
151 -2406 V
150 -631 V
150 309 V
151 9256 V
21395 8185 L
151 10979 V
150 -701 V
21846 8035 L
151 425 V
150 -1254 V
151 -1757 V
150 1995 V
150 9947 V
151 -9484 V
150 -706 V
151 434 V
150 340 V
150 -721 V
151 -1322 V
150 1043 V
151 30 V
150 1587 V
150 -1103 V
151 1251 V
150 -3755 V
151 -102 V
150 2974 V
150 -1181 V
151 1360 V
150 -342 V
151 236 V
150 -320 V
150 825 V
151 -592 V
150 1261 V
151 -848 V
150 -252 V
150 241 V
151 -672 V
150 10481 V
151 -4646 V
150 2141 V
150 1839 V
27261 5393 L
150 1238 V
151 756 V
150 -2680 V
150 5063 V
151 -3498 V
150 1705 V
151 -273 V
150 -1112 V
150 2627 V
151 5124 V
150 -8433 V
151 207 V
150 1569 V
150 665 V
151 -2227 V
150 4627 V
151 -4705 V
150 2340 V
150 319 V
151 162 V
150 1617 V
151 -4512 V
150 2525 V
150 -1141 V
151 8621 V
150 -9323 V
151 10916 V
150 -208 V
150 -6852 V
151 -3195 V
150 3359 V
151 2884 V
150 -5751 V
150 9143 V
151 -64 V
150 313 V
151 -205 V
150 -6398 V
150 -4394 V
151 367 V
150 704 V
151 -1695 V
150 2132 V
150 654 V
151 -1563 V
150 -569 V
151 455 V
150 2452 V
150 -1444 V
151 1710 V
150 1329 V
151 -2064 V
150 -551 V
150 -76 V
151 873 V
150 -2262 V
151 1172 V
150 464 V
150 -521 V
151 -1142 V
150 1405 V
151 114 V
150 -1045 V
150 737 V
151 849 V
150 1466 V
151 -2504 V
150 1877 V
150 -2471 V
151 -237 V
150 3646 V
151 -2255 V
150 -789 V
150 2586 V
151 -1828 V
150 845 V
151 -493 V
150 -985 V
150 25 V
151 2868 V
150 -821 V
151 -2554 V
150 3190 V
150 -2512 V
151 -1553 V
150 10875 V
151 -9979 V
150 1866 V
150 -1356 V
151 1859 V
150 -1103 V
151 11 V
150 2939 V
150 -3351 V
151 -139 V
150 4297 V
151 -2847 V
150 -1417 V
stroke
1.000 UL
LTb
4400 19200 N
0 -16640 V
37600 0 V
0 16640 V
-37600 0 V
Z stroke
1.000 UP
1.000 UL
LTb
stroke
grestore
end
showpage
%%Trailer
%%DocumentFonts: Helvetica
