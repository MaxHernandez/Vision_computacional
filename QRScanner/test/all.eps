%!PS-Adobe-2.0 EPSF-2.0
%%Title: all.eps
%%Creator: gnuplot 4.2 patchlevel 6 
%%CreationDate: Tue May 14 05:54:12 2013
%%DocumentFonts: (atend)
%%BoundingBox: 50 50 2210 1058
%%EndComments
%%BeginProlog
/gnudict 256 dict def
gnudict begin
%
% The following 6 true/false flags may be edited by hand if required
% The unit line width may also be changed
%
/Color true def
/Blacktext false def
/Solid false def
/Dashlength 1 def
/Landscape false def
/Level1 false def
/Rounded false def
/TransparentPatterns false def
/gnulinewidth 5.000 def
/userlinewidth gnulinewidth def
%
/vshift -200 def
/dl1 {
  10.0 Dashlength mul mul
  Rounded { currentlinewidth 0.75 mul sub dup 0 le { pop 0.01 } if } if
} def
/dl2 {
  10.0 Dashlength mul mul
  Rounded { currentlinewidth 0.75 mul add } if
} def
/hpt_ 31.5 def
/vpt_ 31.5 def
/hpt hpt_ def
/vpt vpt_ def
Level1 {} {
/SDict 10 dict def
systemdict /pdfmark known not {
  userdict /pdfmark systemdict /cleartomark get put
} if
SDict begin [
  /Title (all.eps)
  /Subject (gnuplot plot)
  /Creator (gnuplot 4.2 patchlevel 6 )
  /Author (Max,,,,)
%  /Producer (gnuplot)
%  /Keywords ()
  /CreationDate (Tue May 14 05:54:12 2013)
  /DOCINFO pdfmark
end
} ifelse
%
% Gnuplot Prolog Version 4.2 (August 2006)
%
/M {moveto} bind def
/L {lineto} bind def
/R {rmoveto} bind def
/V {rlineto} bind def
/N {newpath moveto} bind def
/Z {closepath} bind def
/C {setrgbcolor} bind def
/f {rlineto fill} bind def
/vpt2 vpt 2 mul def
/hpt2 hpt 2 mul def
/Lshow {currentpoint stroke M 0 vshift R 
	Blacktext {gsave 0 setgray show grestore} {show} ifelse} def
/Rshow {currentpoint stroke M dup stringwidth pop neg vshift R
	Blacktext {gsave 0 setgray show grestore} {show} ifelse} def
/Cshow {currentpoint stroke M dup stringwidth pop -2 div vshift R 
	Blacktext {gsave 0 setgray show grestore} {show} ifelse} def
/UP {dup vpt_ mul /vpt exch def hpt_ mul /hpt exch def
  /hpt2 hpt 2 mul def /vpt2 vpt 2 mul def} def
/DL {Color {setrgbcolor Solid {pop []} if 0 setdash}
 {pop pop pop 0 setgray Solid {pop []} if 0 setdash} ifelse} def
/BL {stroke userlinewidth 2 mul setlinewidth
	Rounded {1 setlinejoin 1 setlinecap} if} def
/AL {stroke userlinewidth 2 div setlinewidth
	Rounded {1 setlinejoin 1 setlinecap} if} def
/UL {dup gnulinewidth mul /userlinewidth exch def
	dup 1 lt {pop 1} if 10 mul /udl exch def} def
/PL {stroke userlinewidth setlinewidth
	Rounded {1 setlinejoin 1 setlinecap} if} def
% Default Line colors
/LCw {1 1 1} def
/LCb {0 0 0} def
/LCa {0 0 0} def
/LC0 {1 0 0} def
/LC1 {0 1 0} def
/LC2 {0 0 1} def
/LC3 {1 0 1} def
/LC4 {0 1 1} def
/LC5 {1 1 0} def
/LC6 {0 0 0} def
/LC7 {1 0.3 0} def
/LC8 {0.5 0.5 0.5} def
% Default Line Types
/LTw {PL [] 1 setgray} def
/LTb {BL [] LCb DL} def
/LTa {AL [1 udl mul 2 udl mul] 0 setdash LCa setrgbcolor} def
/LT0 {PL [] LC0 DL} def
/LT1 {PL [4 dl1 2 dl2] LC1 DL} def
/LT2 {PL [2 dl1 3 dl2] LC2 DL} def
/LT3 {PL [1 dl1 1.5 dl2] LC3 DL} def
/LT4 {PL [6 dl1 2 dl2 1 dl1 2 dl2] LC4 DL} def
/LT5 {PL [3 dl1 3 dl2 1 dl1 3 dl2] LC5 DL} def
/LT6 {PL [2 dl1 2 dl2 2 dl1 6 dl2] LC6 DL} def
/LT7 {PL [1 dl1 2 dl2 6 dl1 2 dl2 1 dl1 2 dl2] LC7 DL} def
/LT8 {PL [2 dl1 2 dl2 2 dl1 2 dl2 2 dl1 2 dl2 2 dl1 4 dl2] LC8 DL} def
/Pnt {stroke [] 0 setdash gsave 1 setlinecap M 0 0 V stroke grestore} def
/Dia {stroke [] 0 setdash 2 copy vpt add M
  hpt neg vpt neg V hpt vpt neg V
  hpt vpt V hpt neg vpt V closepath stroke
  Pnt} def
/Pls {stroke [] 0 setdash vpt sub M 0 vpt2 V
  currentpoint stroke M
  hpt neg vpt neg R hpt2 0 V stroke
 } def
/Box {stroke [] 0 setdash 2 copy exch hpt sub exch vpt add M
  0 vpt2 neg V hpt2 0 V 0 vpt2 V
  hpt2 neg 0 V closepath stroke
  Pnt} def
/Crs {stroke [] 0 setdash exch hpt sub exch vpt add M
  hpt2 vpt2 neg V currentpoint stroke M
  hpt2 neg 0 R hpt2 vpt2 V stroke} def
/TriU {stroke [] 0 setdash 2 copy vpt 1.12 mul add M
  hpt neg vpt -1.62 mul V
  hpt 2 mul 0 V
  hpt neg vpt 1.62 mul V closepath stroke
  Pnt} def
/Star {2 copy Pls Crs} def
/BoxF {stroke [] 0 setdash exch hpt sub exch vpt add M
  0 vpt2 neg V hpt2 0 V 0 vpt2 V
  hpt2 neg 0 V closepath fill} def
/TriUF {stroke [] 0 setdash vpt 1.12 mul add M
  hpt neg vpt -1.62 mul V
  hpt 2 mul 0 V
  hpt neg vpt 1.62 mul V closepath fill} def
/TriD {stroke [] 0 setdash 2 copy vpt 1.12 mul sub M
  hpt neg vpt 1.62 mul V
  hpt 2 mul 0 V
  hpt neg vpt -1.62 mul V closepath stroke
  Pnt} def
/TriDF {stroke [] 0 setdash vpt 1.12 mul sub M
  hpt neg vpt 1.62 mul V
  hpt 2 mul 0 V
  hpt neg vpt -1.62 mul V closepath fill} def
/DiaF {stroke [] 0 setdash vpt add M
  hpt neg vpt neg V hpt vpt neg V
  hpt vpt V hpt neg vpt V closepath fill} def
/Pent {stroke [] 0 setdash 2 copy gsave
  translate 0 hpt M 4 {72 rotate 0 hpt L} repeat
  closepath stroke grestore Pnt} def
/PentF {stroke [] 0 setdash gsave
  translate 0 hpt M 4 {72 rotate 0 hpt L} repeat
  closepath fill grestore} def
/Circle {stroke [] 0 setdash 2 copy
  hpt 0 360 arc stroke Pnt} def
/CircleF {stroke [] 0 setdash hpt 0 360 arc fill} def
/C0 {BL [] 0 setdash 2 copy moveto vpt 90 450 arc} bind def
/C1 {BL [] 0 setdash 2 copy moveto
	2 copy vpt 0 90 arc closepath fill
	vpt 0 360 arc closepath} bind def
/C2 {BL [] 0 setdash 2 copy moveto
	2 copy vpt 90 180 arc closepath fill
	vpt 0 360 arc closepath} bind def
/C3 {BL [] 0 setdash 2 copy moveto
	2 copy vpt 0 180 arc closepath fill
	vpt 0 360 arc closepath} bind def
/C4 {BL [] 0 setdash 2 copy moveto
	2 copy vpt 180 270 arc closepath fill
	vpt 0 360 arc closepath} bind def
/C5 {BL [] 0 setdash 2 copy moveto
	2 copy vpt 0 90 arc
	2 copy moveto
	2 copy vpt 180 270 arc closepath fill
	vpt 0 360 arc} bind def
/C6 {BL [] 0 setdash 2 copy moveto
	2 copy vpt 90 270 arc closepath fill
	vpt 0 360 arc closepath} bind def
/C7 {BL [] 0 setdash 2 copy moveto
	2 copy vpt 0 270 arc closepath fill
	vpt 0 360 arc closepath} bind def
/C8 {BL [] 0 setdash 2 copy moveto
	2 copy vpt 270 360 arc closepath fill
	vpt 0 360 arc closepath} bind def
/C9 {BL [] 0 setdash 2 copy moveto
	2 copy vpt 270 450 arc closepath fill
	vpt 0 360 arc closepath} bind def
/C10 {BL [] 0 setdash 2 copy 2 copy moveto vpt 270 360 arc closepath fill
	2 copy moveto
	2 copy vpt 90 180 arc closepath fill
	vpt 0 360 arc closepath} bind def
/C11 {BL [] 0 setdash 2 copy moveto
	2 copy vpt 0 180 arc closepath fill
	2 copy moveto
	2 copy vpt 270 360 arc closepath fill
	vpt 0 360 arc closepath} bind def
/C12 {BL [] 0 setdash 2 copy moveto
	2 copy vpt 180 360 arc closepath fill
	vpt 0 360 arc closepath} bind def
/C13 {BL [] 0 setdash 2 copy moveto
	2 copy vpt 0 90 arc closepath fill
	2 copy moveto
	2 copy vpt 180 360 arc closepath fill
	vpt 0 360 arc closepath} bind def
/C14 {BL [] 0 setdash 2 copy moveto
	2 copy vpt 90 360 arc closepath fill
	vpt 0 360 arc} bind def
/C15 {BL [] 0 setdash 2 copy vpt 0 360 arc closepath fill
	vpt 0 360 arc closepath} bind def
/Rec {newpath 4 2 roll moveto 1 index 0 rlineto 0 exch rlineto
	neg 0 rlineto closepath} bind def
/Square {dup Rec} bind def
/Bsquare {vpt sub exch vpt sub exch vpt2 Square} bind def
/S0 {BL [] 0 setdash 2 copy moveto 0 vpt rlineto BL Bsquare} bind def
/S1 {BL [] 0 setdash 2 copy vpt Square fill Bsquare} bind def
/S2 {BL [] 0 setdash 2 copy exch vpt sub exch vpt Square fill Bsquare} bind def
/S3 {BL [] 0 setdash 2 copy exch vpt sub exch vpt2 vpt Rec fill Bsquare} bind def
/S4 {BL [] 0 setdash 2 copy exch vpt sub exch vpt sub vpt Square fill Bsquare} bind def
/S5 {BL [] 0 setdash 2 copy 2 copy vpt Square fill
	exch vpt sub exch vpt sub vpt Square fill Bsquare} bind def
/S6 {BL [] 0 setdash 2 copy exch vpt sub exch vpt sub vpt vpt2 Rec fill Bsquare} bind def
/S7 {BL [] 0 setdash 2 copy exch vpt sub exch vpt sub vpt vpt2 Rec fill
	2 copy vpt Square fill Bsquare} bind def
/S8 {BL [] 0 setdash 2 copy vpt sub vpt Square fill Bsquare} bind def
/S9 {BL [] 0 setdash 2 copy vpt sub vpt vpt2 Rec fill Bsquare} bind def
/S10 {BL [] 0 setdash 2 copy vpt sub vpt Square fill 2 copy exch vpt sub exch vpt Square fill
	Bsquare} bind def
/S11 {BL [] 0 setdash 2 copy vpt sub vpt Square fill 2 copy exch vpt sub exch vpt2 vpt Rec fill
	Bsquare} bind def
/S12 {BL [] 0 setdash 2 copy exch vpt sub exch vpt sub vpt2 vpt Rec fill Bsquare} bind def
/S13 {BL [] 0 setdash 2 copy exch vpt sub exch vpt sub vpt2 vpt Rec fill
	2 copy vpt Square fill Bsquare} bind def
/S14 {BL [] 0 setdash 2 copy exch vpt sub exch vpt sub vpt2 vpt Rec fill
	2 copy exch vpt sub exch vpt Square fill Bsquare} bind def
/S15 {BL [] 0 setdash 2 copy Bsquare fill Bsquare} bind def
/D0 {gsave translate 45 rotate 0 0 S0 stroke grestore} bind def
/D1 {gsave translate 45 rotate 0 0 S1 stroke grestore} bind def
/D2 {gsave translate 45 rotate 0 0 S2 stroke grestore} bind def
/D3 {gsave translate 45 rotate 0 0 S3 stroke grestore} bind def
/D4 {gsave translate 45 rotate 0 0 S4 stroke grestore} bind def
/D5 {gsave translate 45 rotate 0 0 S5 stroke grestore} bind def
/D6 {gsave translate 45 rotate 0 0 S6 stroke grestore} bind def
/D7 {gsave translate 45 rotate 0 0 S7 stroke grestore} bind def
/D8 {gsave translate 45 rotate 0 0 S8 stroke grestore} bind def
/D9 {gsave translate 45 rotate 0 0 S9 stroke grestore} bind def
/D10 {gsave translate 45 rotate 0 0 S10 stroke grestore} bind def
/D11 {gsave translate 45 rotate 0 0 S11 stroke grestore} bind def
/D12 {gsave translate 45 rotate 0 0 S12 stroke grestore} bind def
/D13 {gsave translate 45 rotate 0 0 S13 stroke grestore} bind def
/D14 {gsave translate 45 rotate 0 0 S14 stroke grestore} bind def
/D15 {gsave translate 45 rotate 0 0 S15 stroke grestore} bind def
/DiaE {stroke [] 0 setdash vpt add M
  hpt neg vpt neg V hpt vpt neg V
  hpt vpt V hpt neg vpt V closepath stroke} def
/BoxE {stroke [] 0 setdash exch hpt sub exch vpt add M
  0 vpt2 neg V hpt2 0 V 0 vpt2 V
  hpt2 neg 0 V closepath stroke} def
/TriUE {stroke [] 0 setdash vpt 1.12 mul add M
  hpt neg vpt -1.62 mul V
  hpt 2 mul 0 V
  hpt neg vpt 1.62 mul V closepath stroke} def
/TriDE {stroke [] 0 setdash vpt 1.12 mul sub M
  hpt neg vpt 1.62 mul V
  hpt 2 mul 0 V
  hpt neg vpt -1.62 mul V closepath stroke} def
/PentE {stroke [] 0 setdash gsave
  translate 0 hpt M 4 {72 rotate 0 hpt L} repeat
  closepath stroke grestore} def
/CircE {stroke [] 0 setdash 
  hpt 0 360 arc stroke} def
/Opaque {gsave closepath 1 setgray fill grestore 0 setgray closepath} def
/DiaW {stroke [] 0 setdash vpt add M
  hpt neg vpt neg V hpt vpt neg V
  hpt vpt V hpt neg vpt V Opaque stroke} def
/BoxW {stroke [] 0 setdash exch hpt sub exch vpt add M
  0 vpt2 neg V hpt2 0 V 0 vpt2 V
  hpt2 neg 0 V Opaque stroke} def
/TriUW {stroke [] 0 setdash vpt 1.12 mul add M
  hpt neg vpt -1.62 mul V
  hpt 2 mul 0 V
  hpt neg vpt 1.62 mul V Opaque stroke} def
/TriDW {stroke [] 0 setdash vpt 1.12 mul sub M
  hpt neg vpt 1.62 mul V
  hpt 2 mul 0 V
  hpt neg vpt -1.62 mul V Opaque stroke} def
/PentW {stroke [] 0 setdash gsave
  translate 0 hpt M 4 {72 rotate 0 hpt L} repeat
  Opaque stroke grestore} def
/CircW {stroke [] 0 setdash 
  hpt 0 360 arc Opaque stroke} def
/BoxFill {gsave Rec 1 setgray fill grestore} def
/Density {
  /Fillden exch def
  currentrgbcolor
  /ColB exch def /ColG exch def /ColR exch def
  /ColR ColR Fillden mul Fillden sub 1 add def
  /ColG ColG Fillden mul Fillden sub 1 add def
  /ColB ColB Fillden mul Fillden sub 1 add def
  ColR ColG ColB setrgbcolor} def
/BoxColFill {gsave Rec PolyFill} def
/PolyFill {gsave Density fill grestore grestore} def
/h {rlineto rlineto rlineto gsave closepath fill grestore} bind def
%
% PostScript Level 1 Pattern Fill routine for rectangles
% Usage: x y w h s a XX PatternFill
%	x,y = lower left corner of box to be filled
%	w,h = width and height of box
%	  a = angle in degrees between lines and x-axis
%	 XX = 0/1 for no/yes cross-hatch
%
/PatternFill {gsave /PFa [ 9 2 roll ] def
  PFa 0 get PFa 2 get 2 div add PFa 1 get PFa 3 get 2 div add translate
  PFa 2 get -2 div PFa 3 get -2 div PFa 2 get PFa 3 get Rec
  gsave 1 setgray fill grestore clip
  currentlinewidth 0.5 mul setlinewidth
  /PFs PFa 2 get dup mul PFa 3 get dup mul add sqrt def
  0 0 M PFa 5 get rotate PFs -2 div dup translate
  0 1 PFs PFa 4 get div 1 add floor cvi
	{PFa 4 get mul 0 M 0 PFs V} for
  0 PFa 6 get ne {
	0 1 PFs PFa 4 get div 1 add floor cvi
	{PFa 4 get mul 0 2 1 roll M PFs 0 V} for
 } if
  stroke grestore} def
%
/languagelevel where
 {pop languagelevel} {1} ifelse
 2 lt
	{/InterpretLevel1 true def}
	{/InterpretLevel1 Level1 def}
 ifelse
%
% PostScript level 2 pattern fill definitions
%
/Level2PatternFill {
/Tile8x8 {/PaintType 2 /PatternType 1 /TilingType 1 /BBox [0 0 8 8] /XStep 8 /YStep 8}
	bind def
/KeepColor {currentrgbcolor [/Pattern /DeviceRGB] setcolorspace} bind def
<< Tile8x8
 /PaintProc {0.5 setlinewidth pop 0 0 M 8 8 L 0 8 M 8 0 L stroke} 
>> matrix makepattern
/Pat1 exch def
<< Tile8x8
 /PaintProc {0.5 setlinewidth pop 0 0 M 8 8 L 0 8 M 8 0 L stroke
	0 4 M 4 8 L 8 4 L 4 0 L 0 4 L stroke}
>> matrix makepattern
/Pat2 exch def
<< Tile8x8
 /PaintProc {0.5 setlinewidth pop 0 0 M 0 8 L
	8 8 L 8 0 L 0 0 L fill}
>> matrix makepattern
/Pat3 exch def
<< Tile8x8
 /PaintProc {0.5 setlinewidth pop -4 8 M 8 -4 L
	0 12 M 12 0 L stroke}
>> matrix makepattern
/Pat4 exch def
<< Tile8x8
 /PaintProc {0.5 setlinewidth pop -4 0 M 8 12 L
	0 -4 M 12 8 L stroke}
>> matrix makepattern
/Pat5 exch def
<< Tile8x8
 /PaintProc {0.5 setlinewidth pop -2 8 M 4 -4 L
	0 12 M 8 -4 L 4 12 M 10 0 L stroke}
>> matrix makepattern
/Pat6 exch def
<< Tile8x8
 /PaintProc {0.5 setlinewidth pop -2 0 M 4 12 L
	0 -4 M 8 12 L 4 -4 M 10 8 L stroke}
>> matrix makepattern
/Pat7 exch def
<< Tile8x8
 /PaintProc {0.5 setlinewidth pop 8 -2 M -4 4 L
	12 0 M -4 8 L 12 4 M 0 10 L stroke}
>> matrix makepattern
/Pat8 exch def
<< Tile8x8
 /PaintProc {0.5 setlinewidth pop 0 -2 M 12 4 L
	-4 0 M 12 8 L -4 4 M 8 10 L stroke}
>> matrix makepattern
/Pat9 exch def
/Pattern1 {PatternBgnd KeepColor Pat1 setpattern} bind def
/Pattern2 {PatternBgnd KeepColor Pat2 setpattern} bind def
/Pattern3 {PatternBgnd KeepColor Pat3 setpattern} bind def
/Pattern4 {PatternBgnd KeepColor Landscape {Pat5} {Pat4} ifelse setpattern} bind def
/Pattern5 {PatternBgnd KeepColor Landscape {Pat4} {Pat5} ifelse setpattern} bind def
/Pattern6 {PatternBgnd KeepColor Landscape {Pat9} {Pat6} ifelse setpattern} bind def
/Pattern7 {PatternBgnd KeepColor Landscape {Pat8} {Pat7} ifelse setpattern} bind def
} def
%
%
%End of PostScript Level 2 code
%
/PatternBgnd {
  TransparentPatterns {} {gsave 1 setgray fill grestore} ifelse
} def
%
% Substitute for Level 2 pattern fill codes with
% grayscale if Level 2 support is not selected.
%
/Level1PatternFill {
/Pattern1 {0.250 Density} bind def
/Pattern2 {0.500 Density} bind def
/Pattern3 {0.750 Density} bind def
/Pattern4 {0.125 Density} bind def
/Pattern5 {0.375 Density} bind def
/Pattern6 {0.625 Density} bind def
/Pattern7 {0.875 Density} bind def
} def
%
% Now test for support of Level 2 code
%
Level1 {Level1PatternFill} {Level2PatternFill} ifelse
%
/Symbol-Oblique /Symbol findfont [1 0 .167 1 0 0] makefont
dup length dict begin {1 index /FID eq {pop pop} {def} ifelse} forall
currentdict end definefont pop
/MFshow {
   { dup 5 get 3 ge
     { 5 get 3 eq {gsave} {grestore} ifelse }
     {dup dup 0 get findfont exch 1 get scalefont setfont
     [ currentpoint ] exch dup 2 get 0 exch R dup 5 get 2 ne {dup dup 6
     get exch 4 get {show} {stringwidth pop 0 R} ifelse }if dup 5 get 0 eq
     {dup 3 get {2 get neg 0 exch R pop} {pop aload pop M} ifelse} {dup 5
     get 1 eq {dup 2 get exch dup 3 get exch 6 get stringwidth pop -2 div
     dup 0 R} {dup 6 get stringwidth pop -2 div 0 R 6 get
     show 2 index {aload pop M neg 3 -1 roll neg R pop pop} {pop pop pop
     pop aload pop M} ifelse }ifelse }ifelse }
     ifelse }
   forall} bind def
/MFwidth {0 exch { dup 5 get 3 ge { 5 get 3 eq { 0 } { pop } ifelse }
 {dup 3 get{dup dup 0 get findfont exch 1 get scalefont setfont
     6 get stringwidth pop add} {pop} ifelse} ifelse} forall} bind def
/MLshow { currentpoint stroke M
  0 exch R
  Blacktext {gsave 0 setgray MFshow grestore} {MFshow} ifelse } bind def
/MRshow { currentpoint stroke M
  exch dup MFwidth neg 3 -1 roll R
  Blacktext {gsave 0 setgray MFshow grestore} {MFshow} ifelse } bind def
/MCshow { currentpoint stroke M
  exch dup MFwidth -2 div 3 -1 roll R
  Blacktext {gsave 0 setgray MFshow grestore} {MFshow} ifelse } bind def
/XYsave    { [( ) 1 2 true false 3 ()] } bind def
/XYrestore { [( ) 1 2 true false 4 ()] } bind def
end
%%EndProlog
gnudict begin
gsave
50 50 translate
0.050 0.050 scale
0 setgray
newpath
(Helvetica) findfont 600 scalefont setfont
1.000 UL
LTb
1.000 UL
LTa
0.73 0.73 0.73 C 3300 1920 M
39000 0 V
stroke
LTb
3300 1920 M
63 0 V
38937 0 R
-63 0 V
stroke
2940 1920 M
[ [(Helvetica) 600.0 0.0 true true 0 ( 4)]
] -200.0 MRshow
1.000 UL
LTb
1.000 UL
LTa
0.73 0.73 0.73 C 3300 3513 M
39000 0 V
stroke
LTb
3300 3513 M
63 0 V
38937 0 R
-63 0 V
stroke
2940 3513 M
[ [(Helvetica) 600.0 0.0 true true 0 ( 6)]
] -200.0 MRshow
1.000 UL
LTb
1.000 UL
LTa
0.73 0.73 0.73 C 3300 5105 M
39000 0 V
stroke
LTb
3300 5105 M
63 0 V
38937 0 R
-63 0 V
stroke
2940 5105 M
[ [(Helvetica) 600.0 0.0 true true 0 ( 8)]
] -200.0 MRshow
1.000 UL
LTb
1.000 UL
LTa
0.73 0.73 0.73 C 3300 6698 M
39000 0 V
stroke
LTb
3300 6698 M
63 0 V
38937 0 R
-63 0 V
stroke
2940 6698 M
[ [(Helvetica) 600.0 0.0 true true 0 ( 10)]
] -200.0 MRshow
1.000 UL
LTb
1.000 UL
LTa
0.73 0.73 0.73 C 3300 8291 M
39000 0 V
stroke
LTb
3300 8291 M
63 0 V
38937 0 R
-63 0 V
stroke
2940 8291 M
[ [(Helvetica) 600.0 0.0 true true 0 ( 12)]
] -200.0 MRshow
1.000 UL
LTb
1.000 UL
LTa
0.73 0.73 0.73 C 3300 9884 M
39000 0 V
stroke
LTb
3300 9884 M
63 0 V
38937 0 R
-63 0 V
stroke
2940 9884 M
[ [(Helvetica) 600.0 0.0 true true 0 ( 14)]
] -200.0 MRshow
1.000 UL
LTb
1.000 UL
LTa
0.73 0.73 0.73 C 3300 11476 M
39000 0 V
stroke
LTb
3300 11476 M
63 0 V
38937 0 R
-63 0 V
stroke
2940 11476 M
[ [(Helvetica) 600.0 0.0 true true 0 ( 16)]
] -200.0 MRshow
1.000 UL
LTb
1.000 UL
LTa
0.73 0.73 0.73 C 3300 13069 M
39000 0 V
stroke
LTb
3300 13069 M
63 0 V
38937 0 R
-63 0 V
stroke
2940 13069 M
[ [(Helvetica) 600.0 0.0 true true 0 ( 18)]
] -200.0 MRshow
1.000 UL
LTb
1.000 UL
LTa
0.73 0.73 0.73 C 3300 14662 M
39000 0 V
stroke
LTb
3300 14662 M
63 0 V
38937 0 R
-63 0 V
stroke
2940 14662 M
[ [(Helvetica) 600.0 0.0 true true 0 ( 20)]
] -200.0 MRshow
1.000 UL
LTb
1.000 UL
LTa
0.73 0.73 0.73 C 3300 16255 M
39000 0 V
stroke
LTb
3300 16255 M
63 0 V
38937 0 R
-63 0 V
stroke
2940 16255 M
[ [(Helvetica) 600.0 0.0 true true 0 ( 22)]
] -200.0 MRshow
1.000 UL
LTb
1.000 UL
LTa
0.73 0.73 0.73 C 3300 17847 M
28137 0 V
10503 0 R
360 0 V
stroke
LTb
3300 17847 M
63 0 V
38937 0 R
-63 0 V
stroke
2940 17847 M
[ [(Helvetica) 600.0 0.0 true true 0 ( 24)]
] -200.0 MRshow
1.000 UL
LTb
1.000 UL
LTa
0.73 0.73 0.73 C 3300 19440 M
39000 0 V
stroke
LTb
3300 19440 M
63 0 V
38937 0 R
-63 0 V
stroke
2940 19440 M
[ [(Helvetica) 600.0 0.0 true true 0 ( 26)]
] -200.0 MRshow
1.000 UL
LTb
1.000 UL
LTa
0.73 0.73 0.73 C 3300 1920 M
0 17520 V
stroke
LTb
3300 1920 M
0 63 V
0 17457 R
0 -63 V
stroke
3300 1320 M
[ [(Helvetica) 600.0 0.0 true true 0 ( 0)]
] -200.0 MCshow
1.000 UL
LTb
1.000 UL
LTa
0.73 0.73 0.73 C 9800 1920 M
0 17520 V
stroke
LTb
9800 1920 M
0 63 V
0 17457 R
0 -63 V
stroke
9800 1320 M
[ [(Helvetica) 600.0 0.0 true true 0 ( 50)]
] -200.0 MCshow
1.000 UL
LTb
1.000 UL
LTa
0.73 0.73 0.73 C 16300 1920 M
0 17520 V
stroke
LTb
16300 1920 M
0 63 V
0 17457 R
0 -63 V
stroke
16300 1320 M
[ [(Helvetica) 600.0 0.0 true true 0 ( 100)]
] -200.0 MCshow
1.000 UL
LTb
1.000 UL
LTa
0.73 0.73 0.73 C 22800 1920 M
0 17520 V
stroke
LTb
22800 1920 M
0 63 V
0 17457 R
0 -63 V
stroke
22800 1320 M
[ [(Helvetica) 600.0 0.0 true true 0 ( 150)]
] -200.0 MCshow
1.000 UL
LTb
1.000 UL
LTa
0.73 0.73 0.73 C 29300 1920 M
0 17520 V
stroke
LTb
29300 1920 M
0 63 V
0 17457 R
0 -63 V
stroke
29300 1320 M
[ [(Helvetica) 600.0 0.0 true true 0 ( 200)]
] -200.0 MCshow
1.000 UL
LTb
1.000 UL
LTa
0.73 0.73 0.73 C 35800 1920 M
0 15657 V
0 1800 R
0 63 V
stroke
LTb
35800 1920 M
0 63 V
0 17457 R
0 -63 V
stroke
35800 1320 M
[ [(Helvetica) 600.0 0.0 true true 0 ( 250)]
] -200.0 MCshow
1.000 UL
LTb
1.000 UL
LTa
0.73 0.73 0.73 C 42300 1920 M
0 17520 V
stroke
LTb
42300 1920 M
0 63 V
0 17457 R
0 -63 V
stroke
42300 1320 M
[ [(Helvetica) 600.0 0.0 true true 0 ( 300)]
] -200.0 MCshow
1.000 UL
LTb
1.000 UL
LTb
3300 19440 N
0 -17520 V
39000 0 V
0 17520 V
-39000 0 V
Z stroke
LCb setrgbcolor
1200 10680 M
currentpoint gsave translate 90 rotate 0 0 moveto
[ [(Helvetica) 600.0 0.0 true true 0 (Frames por segundo)]
] -200.0 MCshow
grestore
LTb
LCb setrgbcolor
22800 420 M
[ [(Helvetica) 600.0 0.0 true true 0 (Tiempo)]
] -200.0 MCshow
LTb
1.000 UP
1.000 UL
LTb
1.000 UP
30.000 UL
LT0
0.00 0.88 0.00 C LTb
39717 19077 M
[ [(Helvetica) 600.0 0.0 true true 0 (Escaneando QR code)]
] -200.0 MRshow
LT0
0.00 0.88 0.00 C 3300 14220 TriU
3430 6814 TriU
3560 15204 TriU
3690 16029 TriU
3820 15433 TriU
3950 14018 TriU
4080 14025 TriU
4210 15638 TriU
4340 13811 TriU
4470 7090 TriU
4600 13923 TriU
4730 7768 TriU
4860 5497 TriU
4990 7450 TriU
5120 7957 TriU
5250 7802 TriU
5380 7399 TriU
5510 6351 TriU
5640 6675 TriU
5770 7235 TriU
5900 7490 TriU
6030 7940 TriU
6160 9326 TriU
6290 4898 TriU
6420 7937 TriU
6550 7012 TriU
6680 7099 TriU
6810 5338 TriU
6940 3723 TriU
7070 7565 TriU
7200 12590 TriU
7330 7756 TriU
7460 16183 TriU
7590 14612 TriU
7720 15430 TriU
7850 6484 TriU
7980 8042 TriU
8110 15257 TriU
8240 14087 TriU
8370 15530 TriU
8500 10349 TriU
8630 6353 TriU
8760 7151 TriU
8890 8913 TriU
9020 5900 TriU
9150 8116 TriU
9280 8655 TriU
9410 8423 TriU
9540 7491 TriU
9670 7720 TriU
9800 8954 TriU
9930 8021 TriU
10060 9261 TriU
10190 16084 TriU
10320 15789 TriU
10450 13782 TriU
10580 14949 TriU
10710 15653 TriU
10840 7864 TriU
10970 8312 TriU
11100 14855 TriU
11230 7081 TriU
11360 15620 TriU
11490 7218 TriU
11620 6799 TriU
11750 8271 TriU
11880 8024 TriU
12010 8213 TriU
12140 8134 TriU
12270 8446 TriU
12400 5954 TriU
12530 7984 TriU
12660 7170 TriU
12790 7540 TriU
12920 15874 TriU
13050 16199 TriU
13180 11345 TriU
13310 9678 TriU
13440 6173 TriU
13570 10249 TriU
13700 5709 TriU
13830 6052 TriU
13960 6629 TriU
14090 6502 TriU
14220 7311 TriU
14350 7152 TriU
14480 6388 TriU
14610 7271 TriU
14740 14394 TriU
14870 11248 TriU
15000 10025 TriU
15130 6173 TriU
15260 7755 TriU
15390 7995 TriU
15520 10827 TriU
15650 11511 TriU
15780 5273 TriU
15910 6105 TriU
16040 8278 TriU
16170 7268 TriU
16300 6851 TriU
16430 7140 TriU
16560 8911 TriU
16690 8681 TriU
16820 8784 TriU
16950 8994 TriU
17080 10893 TriU
17210 10505 TriU
17340 11115 TriU
17470 9273 TriU
17600 8789 TriU
17730 9026 TriU
17860 16113 TriU
17990 7820 TriU
18120 16227 TriU
18250 15690 TriU
18380 7705 TriU
18510 8030 TriU
18640 7070 TriU
18770 5725 TriU
18900 7252 TriU
19030 14869 TriU
19160 7607 TriU
19290 7066 TriU
19420 7399 TriU
19550 7659 TriU
19680 7107 TriU
19810 6095 TriU
19940 6893 TriU
20070 6916 TriU
20200 8132 TriU
20330 7287 TriU
20460 8245 TriU
20590 5370 TriU
20720 5292 TriU
20850 7569 TriU
20980 6665 TriU
21110 7706 TriU
21240 7444 TriU
21370 7625 TriU
21500 7380 TriU
21630 8012 TriU
21760 7558 TriU
21890 8524 TriU
22020 7874 TriU
22150 7682 TriU
22280 7866 TriU
22410 7352 TriU
22540 15377 TriU
22670 11820 TriU
22800 13459 TriU
22930 14867 TriU
23060 5682 TriU
23190 6630 TriU
23320 7209 TriU
23450 5156 TriU
23580 9034 TriU
23710 6355 TriU
23840 7661 TriU
23970 7452 TriU
24100 6600 TriU
24230 8612 TriU
24360 12536 TriU
24490 6078 TriU
24620 6237 TriU
24750 7438 TriU
24880 7947 TriU
25010 6242 TriU
25140 9785 TriU
25270 6182 TriU
25400 7974 TriU
25530 8218 TriU
25660 8342 TriU
25790 9580 TriU
25920 6126 TriU
26050 8059 TriU
26180 7185 TriU
26310 13786 TriU
26440 6648 TriU
26570 15006 TriU
26700 14847 TriU
26830 9600 TriU
26960 7154 TriU
27090 9726 TriU
27220 11934 TriU
27350 7530 TriU
27480 14532 TriU
27610 14482 TriU
27740 14723 TriU
27870 14565 TriU
28000 9667 TriU
28130 6302 TriU
28260 6582 TriU
28390 7122 TriU
28520 5824 TriU
28650 7456 TriU
28780 7957 TriU
28910 6760 TriU
29040 6325 TriU
29170 6673 TriU
29300 8550 TriU
29430 7445 TriU
29560 8754 TriU
29690 9772 TriU
29820 8191 TriU
29950 7770 TriU
30080 7711 TriU
30210 8380 TriU
30340 6648 TriU
30470 7545 TriU
30600 7901 TriU
30730 7502 TriU
30860 6627 TriU
30990 7703 TriU
31120 7790 TriU
31250 6990 TriU
31380 7555 TriU
31510 8204 TriU
31640 9327 TriU
31770 7410 TriU
31900 8846 TriU
32030 6955 TriU
32160 6774 TriU
32290 9565 TriU
32420 7838 TriU
32550 7234 TriU
32680 9215 TriU
32810 7814 TriU
32940 8462 TriU
33070 8084 TriU
33200 7330 TriU
33330 7349 TriU
33460 9545 TriU
33590 8917 TriU
33720 6961 TriU
33850 9403 TriU
33980 7480 TriU
34110 6291 TriU
34240 14618 TriU
34370 6977 TriU
34500 8406 TriU
34630 7367 TriU
34760 8791 TriU
34890 7946 TriU
35020 7954 TriU
35150 10205 TriU
35280 7640 TriU
35410 7533 TriU
35540 10823 TriU
35670 8643 TriU
35800 7558 TriU
40828 19077 TriU
1.000 UP
30.000 UL
LT1
0.00 0.00 0.88 C LTb
39717 18477 M
[ [(Helvetica) 600.0 0.0 true true 0 (Ambiente con movimiento)]
] -200.0 MRshow
LT1
0.00 0.00 0.88 C 3300 16798 C0
3430 11679 C0
3560 17080 C0
3690 17870 C0
3820 17998 C0
3950 17677 C0
4080 11588 C0
4210 6624 C0
4340 7920 C0
4470 6115 C0
4600 5761 C0
4730 14074 C0
4860 15468 C0
4990 15054 C0
5120 15502 C0
5250 15492 C0
5380 15338 C0
5510 9561 C0
5640 7522 C0
5770 7809 C0
5900 8335 C0
6030 7695 C0
6160 8077 C0
6290 7223 C0
6420 6234 C0
6550 9558 C0
6680 5705 C0
6810 7290 C0
6940 6595 C0
7070 9245 C0
7200 5163 C0
7330 5121 C0
7460 7827 C0
7590 10205 C0
7720 14591 C0
7850 15753 C0
7980 14245 C0
8110 14140 C0
8240 15197 C0
8370 15192 C0
8500 15177 C0
8630 14603 C0
8760 14139 C0
8890 16355 C0
9020 8036 C0
9150 14522 C0
9280 13510 C0
9410 14031 C0
9540 13590 C0
9670 13904 C0
9800 13481 C0
9930 10665 C0
10060 14128 C0
10190 15858 C0
10320 14146 C0
10450 14023 C0
10580 14294 C0
10710 14349 C0
10840 15467 C0
10970 15600 C0
11100 15446 C0
11230 14169 C0
11360 14208 C0
11490 16683 C0
11620 9885 C0
11750 8266 C0
11880 8009 C0
12010 7985 C0
12140 7568 C0
12270 7533 C0
12400 7963 C0
12530 8261 C0
12660 15306 C0
12790 13986 C0
12920 8986 C0
13050 10223 C0
13180 14514 C0
13310 13477 C0
13440 15295 C0
13570 14153 C0
13700 14197 C0
13830 13332 C0
13960 15382 C0
14090 15441 C0
14220 9201 C0
14350 8432 C0
14480 15377 C0
14610 8990 C0
14740 14512 C0
14870 7869 C0
15000 14635 C0
15130 9889 C0
15260 14735 C0
15390 8054 C0
15520 7888 C0
15650 8073 C0
15780 16024 C0
15910 13515 C0
16040 15412 C0
16170 14266 C0
16300 14214 C0
16430 15457 C0
16560 14199 C0
16690 14298 C0
16820 14184 C0
16950 15209 C0
17080 15589 C0
17210 14193 C0
17340 15592 C0
17470 6651 C0
17600 7850 C0
17730 10667 C0
17860 15584 C0
17990 13746 C0
18120 13639 C0
18250 15809 C0
18380 11648 C0
18510 15490 C0
18640 14731 C0
18770 16035 C0
18900 13524 C0
19030 8828 C0
19160 4838 C0
19290 8219 C0
19420 8896 C0
19550 7282 C0
19680 8069 C0
19810 14638 C0
19940 7335 C0
20070 7939 C0
20200 9060 C0
20330 15145 C0
20460 15178 C0
20590 15291 C0
20720 14519 C0
20850 11744 C0
20980 12695 C0
21110 15425 C0
21240 15134 C0
21370 15820 C0
21500 14986 C0
21630 16149 C0
21760 15767 C0
21890 14488 C0
22020 9701 C0
22150 9707 C0
22280 15366 C0
22410 8305 C0
22540 7448 C0
22670 7151 C0
22800 5262 C0
22930 5059 C0
23060 4135 C0
23190 4747 C0
23320 5237 C0
23450 3890 C0
23580 5331 C0
23710 5086 C0
23840 13833 C0
23970 13986 C0
24100 13522 C0
24230 15903 C0
24360 14403 C0
24490 14202 C0
24620 15208 C0
24750 14637 C0
24880 10386 C0
25010 8054 C0
25140 5549 C0
25270 7806 C0
25400 8028 C0
25530 4855 C0
25660 4430 C0
25790 5937 C0
25920 5986 C0
26050 7935 C0
26180 4998 C0
26310 4959 C0
26440 6033 C0
26570 4793 C0
26700 8330 C0
26830 15303 C0
26960 7217 C0
27090 7718 C0
27220 8808 C0
27350 7216 C0
27480 15618 C0
27610 15396 C0
27740 9435 C0
27870 6118 C0
28000 5228 C0
28130 5925 C0
28260 3908 C0
28390 3401 C0
28520 10756 C0
28650 16985 C0
28780 15994 C0
28910 14490 C0
29040 15189 C0
29170 15272 C0
29300 14085 C0
29430 14119 C0
29560 14052 C0
29690 14234 C0
29820 14278 C0
29950 14450 C0
30080 10092 C0
30210 8068 C0
30340 8371 C0
30470 7880 C0
30600 8394 C0
30730 14567 C0
30860 11348 C0
30990 8289 C0
31120 8527 C0
31250 6041 C0
31380 6169 C0
31510 7284 C0
31640 7425 C0
31770 5054 C0
31900 6911 C0
32030 7943 C0
32160 7218 C0
32290 8980 C0
32420 15323 C0
32550 15282 C0
32680 16326 C0
32810 15435 C0
32940 14599 C0
33070 15441 C0
33200 13394 C0
33330 13750 C0
33460 14040 C0
33590 14220 C0
33720 15463 C0
33850 7350 C0
33980 8099 C0
34110 8163 C0
34240 7962 C0
34370 10310 C0
34500 8471 C0
34630 9956 C0
34760 15139 C0
34890 15092 C0
35020 13415 C0
35150 7476 C0
35280 10071 C0
35410 8502 C0
35540 6814 C0
35670 14239 C0
35800 12686 C0
35930 16462 C0
36060 14106 C0
36190 16515 C0
36320 16572 C0
36450 16342 C0
36580 11133 C0
40828 18477 C0
1.000 UP
30.000 UL
LT2
0.88 0.00 0.00 C LTb
39717 17877 M
[ [(Helvetica) 600.0 0.0 true true 0 (Ambiente estatico)]
] -200.0 MRshow
LT2
0.88 0.00 0.00 C 3300 15321 C1
3430 13359 C1
3560 14695 C1
3690 15434 C1
3820 14252 C1
3950 14232 C1
4080 14806 C1
4210 13570 C1
4340 10755 C1
4470 12722 C1
4600 13217 C1
4730 13064 C1
4860 10997 C1
4990 13224 C1
5120 13548 C1
5250 12696 C1
5380 12098 C1
5510 11299 C1
5640 12505 C1
5770 12669 C1
5900 9047 C1
6030 13601 C1
6160 13580 C1
6290 12316 C1
6420 11711 C1
6550 12801 C1
6680 11686 C1
6810 13417 C1
6940 11200 C1
7070 11404 C1
7200 13026 C1
7330 13514 C1
7460 11953 C1
7590 11765 C1
7720 13029 C1
7850 12633 C1
7980 11730 C1
8110 13181 C1
8240 13275 C1
8370 11014 C1
8500 13641 C1
8630 13310 C1
8760 12411 C1
8890 13227 C1
9020 12403 C1
9150 12412 C1
9280 13263 C1
9410 10968 C1
9540 11348 C1
9670 12130 C1
9800 12309 C1
9930 10784 C1
10060 11236 C1
10190 10005 C1
10320 12682 C1
10450 10411 C1
10580 13317 C1
10710 12626 C1
10840 12467 C1
10970 11149 C1
11100 12362 C1
11230 13568 C1
11360 11935 C1
11490 13422 C1
11620 13259 C1
11750 10946 C1
11880 13627 C1
12010 13504 C1
12140 13505 C1
12270 11317 C1
12400 11471 C1
12530 12658 C1
12660 11076 C1
12790 11375 C1
12920 13547 C1
13050 12540 C1
13180 10865 C1
13310 12603 C1
13440 13555 C1
13570 13289 C1
13700 13561 C1
13830 13536 C1
13960 12638 C1
14090 11862 C1
14220 10355 C1
14350 13251 C1
14480 11121 C1
14610 11237 C1
14740 13000 C1
14870 12743 C1
15000 13865 C1
15130 12542 C1
15260 13456 C1
15390 13663 C1
15520 13428 C1
15650 11764 C1
15780 11503 C1
15910 13538 C1
16040 13477 C1
16170 10660 C1
16300 10103 C1
16430 12502 C1
16560 11329 C1
16690 13283 C1
16820 12468 C1
16950 12714 C1
17080 14540 C1
17210 11385 C1
17340 13518 C1
17470 13256 C1
17600 12382 C1
17730 12290 C1
17860 11166 C1
17990 13241 C1
18120 13609 C1
18250 10524 C1
18380 11723 C1
18510 11594 C1
18640 13471 C1
18770 11127 C1
18900 11830 C1
19030 12692 C1
19160 11893 C1
19290 11545 C1
19420 13054 C1
19550 12408 C1
19680 13325 C1
19810 11542 C1
19940 13315 C1
20070 11748 C1
20200 11693 C1
20330 13554 C1
20460 13173 C1
20590 12985 C1
20720 11443 C1
20850 13489 C1
20980 13331 C1
21110 12356 C1
21240 11129 C1
21370 13272 C1
21500 13466 C1
21630 13354 C1
21760 10156 C1
21890 13329 C1
22020 10404 C1
22150 13551 C1
22280 13512 C1
22410 13229 C1
22540 12749 C1
22670 10384 C1
22800 13127 C1
22930 13001 C1
23060 13187 C1
23190 13541 C1
23320 12466 C1
23450 13206 C1
23580 10714 C1
23710 13551 C1
23840 13535 C1
23970 13065 C1
24100 12421 C1
24230 11139 C1
24360 13300 C1
24490 13351 C1
24620 11524 C1
24750 13251 C1
24880 10846 C1
25010 13182 C1
25140 11520 C1
25270 13060 C1
25400 13260 C1
25530 11818 C1
25660 13239 C1
25790 6537 C1
25920 11900 C1
26050 13336 C1
26180 13534 C1
26310 13119 C1
26440 11882 C1
26570 12420 C1
26700 12673 C1
26830 13253 C1
26960 13501 C1
27090 11759 C1
27220 12096 C1
27350 13211 C1
27480 12779 C1
27610 13621 C1
27740 13505 C1
27870 11519 C1
28000 13022 C1
28130 13238 C1
28260 13536 C1
28390 12486 C1
28520 13658 C1
28650 10372 C1
28780 12849 C1
28910 11218 C1
29040 10952 C1
29170 12676 C1
29300 13555 C1
29430 11544 C1
29560 12746 C1
29690 11721 C1
29820 13519 C1
29950 10196 C1
30080 13373 C1
30210 13580 C1
30340 12551 C1
30470 13359 C1
30600 12690 C1
30730 13102 C1
30860 14825 C1
30990 13314 C1
31120 12029 C1
31250 13186 C1
31380 13218 C1
31510 12579 C1
31640 12292 C1
31770 12749 C1
31900 13357 C1
32030 12314 C1
32160 13310 C1
32290 12415 C1
32420 12873 C1
32550 11175 C1
32680 13297 C1
32810 13542 C1
32940 11300 C1
33070 14465 C1
33200 11844 C1
33330 12494 C1
33460 12472 C1
33590 13263 C1
33720 14769 C1
33850 10740 C1
33980 12114 C1
34110 12413 C1
34240 13564 C1
34370 12487 C1
34500 13538 C1
34630 12254 C1
34760 13296 C1
34890 11773 C1
35020 11356 C1
35150 13559 C1
35280 13438 C1
35410 9205 C1
35540 12675 C1
35670 10856 C1
35800 7658 C1
40828 17877 C1
1.000 UL
LTb
3300 19440 N
0 -17520 V
39000 0 V
0 17520 V
-39000 0 V
Z stroke
1.000 UP
1.000 UL
LTb
stroke
grestore
end
showpage
%%Trailer
%%DocumentFonts: Helvetica
